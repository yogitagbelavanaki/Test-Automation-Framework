<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Successfully Launched Chrome Browser]]>
    </line>
    <line>
      <![CDATA[Browser window is maximized successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2022-02-07T12:19:53 IST" name="Default suite" finished-at="2022-02-07T12:19:58 IST" duration-ms="5481">
    <groups>
      <group name="Functional_TestCase">
        <method signature="Functional_01.functional_01()[pri:0, instance:test_scripts.Functional_01@28f3b248]" name="functional_01" class="test_scripts.Functional_01"/>
      </group> <!-- Functional_TestCase -->
    </groups>
    <test started-at="2022-02-07T12:19:53 IST" name="Default test" finished-at="2022-02-07T12:19:58 IST" duration-ms="5481">
      <class name="test_scripts.Functional_01">
        <test-method is-config="true" signature="openApplication(java.lang.String)[pri:0, instance:test_scripts.Functional_01@28f3b248]" started-at="2022-02-07T12:19:53 IST" name="openApplication" finished-at="2022-02-07T12:19:57 IST" duration-ms="4527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Successfully Launched Chrome Browser]]>
            </line>
            <line>
              <![CDATA[Browser window is maximized successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="functional_01()[pri:0, instance:test_scripts.Functional_01@28f3b248]" started-at="2022-02-07T12:19:57 IST" name="functional_01" finished-at="2022-02-07T12:19:57 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at test_scripts.Functional_01.functional_01(Functional_01.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functional_01 -->
        <test-method is-config="true" signature="CloseApp()[pri:0, instance:test_scripts.Functional_01@28f3b248]" started-at="2022-02-07T12:19:57 IST" name="CloseApp" finished-at="2022-02-07T12:19:58 IST" duration-ms="910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- test_scripts.Functional_01 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
